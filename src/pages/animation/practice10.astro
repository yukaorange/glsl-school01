---
import Button from '@/components/Button.astro'
import Container from '@/layouts/Container.astro'
import Layout from '@/layouts/Layout.astro'
import Main from '@/layouts/Main.astro'
import Section from '@/layouts/Section.astro'

const image01 = '/art/art01.jpg'
const image02 = '/art/art02.jpg'
const image03 = '/art/art03.jpg'

const images = [image01, image02, image03]
const clickItems = ['one', 'two', 'three', 'four', 'five']
---

<Layout title="takaoka_webdesigner">
  <Main>
    <figure class="fixed-bg">
      <img src={images[2]} alt=" " />
    </figure>
    <div class="clickable">
      <ul class="clickable__lsit">
        {
          [...clickItems].map((item, i) => {
            return (
              <div class="clickable__item" style={`height:calc(100vh /${clickItems.length});`}>
                <span class="">{item}</span>
              </div>
            )
          })
        }
      </ul>
    </div>
    <div class="filter">
      <div class="filter__item filter__item--top js-filterTop" style={`height:calc(100cqh/${clickItems.length});`}>
      </div>
      <div
        class="filter__item filter__item--bottom js-filterBottom"
        style={`height:calc(100cqh/${clickItems.length});`}
      >
      </div>
    </div>
  </Main>
</Layout>

<style lang="scss">
  .fixed-bg {
    position: fixed;
    top: 0;
    left: 0;
    z-index: -1;
    width: 100%;
    height: 100%;
    &::before {
      position: absolute;
      inset: 0;
      z-index: 1;
      content: '';
      background-color: rgba(0, 0, 0, 0.5);
    }
  }

  .clickable {
    position: absolute;
    inset: 0;
    z-index: 1;
  }

  .clickable__item {
    z-index: 1;
    display: grid;
    place-items: center;
    cursor: pointer;
  }

  .clickable__item span {
    display: inline-block;
    font-size: 3rem;
    font-weight: 400;
    color: white;
    text-transform: uppercase;
  }

  .filter {
    position: absolute;
    z-index: 2;
    width: 100%;
    height: 100vh;
    pointer-events: none;
  }
  .filter__item {
    position: absolute;
    width: 100%;
    background-color: rgba(0, 0, 0, 0.75);
    transition-duration: 1s;
  }
  .filter__item.filter__item--top {
    top: 0;
  }
  .filter__item.filter__item--bottom {
    bottom: 0;
  }
</style>

<script>
  import { clickableAreasInit } from '@/js/animation/animation10/ClickableAreas'
  import { FilterInit } from '@/js/animation/animation10/Filters'

  let clickableAreas, filterTop, filterBottom, areaLength

  window.addEventListener('load', () => {
    const clickableItems = document.querySelectorAll('.clickable__item')
    areaLength = clickableItems.length

    clickableAreas = new clickableAreasInit({
      items: clickableItems,
      onChange: (id) => {
        moveFilter(id, areaLength)
      },
    })
    filterTop = new FilterInit({
      dom: document.querySelector('.js-filterTop'),
      name: 'top',
    })
    filterBottom = new FilterInit({
      dom: document.querySelector('.js-filterBottom'),
      name: 'bottom',
    })
  })

  function moveFilter(id, length) {
    filterTop.move(id, length)
    filterBottom.move(id, length)
  }
</script>
